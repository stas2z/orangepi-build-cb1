source "${BASH_SOURCE%/*}/include/rockchip64_common.inc"
source "${BASH_SOURCE%/*}/include/ffmepg_kodi.inc"

BOOTPATCHDIR="u-boot-rockchip64-mainline"
BOOT_SOC="rk3399"
ASOUND_STATE="asound.state.rk3399"
BOOTBRANCH="branch:v2020.04-rockchip64"
LINUXCONFIG='linux-rk3399-'$BRANCH
LINUXFAMILY=rk3399

case $BRANCH in

	legacy)

		BOOTBRANCH="branch:v2020.10-rockchip64"
		KERNELBRANCH='branch:orange-pi-4.4-rockchip64'
		#KERNELBRANCH='branch:orange-pi-4.4-rk3399'
		#LINUXCONFIG=linux-rk3399-new-legacy
		KERNEL_USE_GCC='> 7.0'
		KERNEL_COMPILER='aarch64-linux-gnu-'

		[[ ${BOARD} == orangepi800 ]] && ASOUND_STATE='asound.state.orangepi800-es8316'
		[[ ${BOARD} == orangepi4-lts ]] && ASOUND_STATE='asound.state.orangepi4-es8316'
		
		if [[ $RELEASE == xenial && $BUILD_DESKTOP == yes ]]; then
			PACKAGE_LIST_FAMILY="bison flex libffi-dev libmount-dev libpcre3 libpcre3-dev zlib1g-dev libssl-dev gtk-doc-tools \
        				     automake autoconf libtool  gettext make autopoint g++ xz-utils net-tools libasound2-dev \
					     libx11-dev unzip libxext-dev libjpeg62-dev gdisk librtmp-dev libxv-dev libpulse-dev libgl1-mesa-dev libgles2-mesa \
				     	     v4l-utils libpng16-16 cmake make"

                       PACKAGE_LIST_FAMILY_REMOVE="gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-pulseaudio \
						gstreamer1.0-plugins-ugly-amr libgstreamer-plugins-base1.0-0 libgstreamer-plugins-good1.0-0 libgstreamer1.0-0"

		elif [[ $RELEASE == bionic && $BUILD_DESKTOP == yes ]]; then
			PACKAGE_LIST_FAMILY="bison flex libffi-dev libmount-dev libpcre3 libpcre3-dev zlib1g-dev libssl-dev gtk-doc-tools \
					     automake autoconf libtool  gettext make autopoint g++ xz-utils net-tools unzip cmake make libglib2.0-dev \
					     xutils-dev libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
					     gstreamer1.0-plugins-ugly gstreamer1.0-libav  gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa \
				             gstreamer1.0-pulseaudio libgstreamer-plugins-base1.0-dev"

		fi
		;;

	current)

		BOOTBRANCH="branch:v2020.10-rockchip64"
		KERNELBRANCH='branch:orange-pi-5.10-rk3399'
		LINUXCONFIG='linux-5.10-rk3399'
		[[ ${BOARD} == orangepi4-lts ]] && ASOUND_STATE='asound.state.orangepi4-es8316'
		[[ ${BOARD} == orangepi800 ]] && ASOUND_STATE='asound.state.orangepi800-es8316'
		;;

	next)

		BOOTBRANCH='branch:v2020.10-rockchip64'
		KERNELBRANCH='branch:orange-pi-5.18'
		LINUXCONFIG='linux-5.18-next'
		[[ ${BOARD} =~ orangepi800|orangepi4-lts ]] && ASOUND_STATE='asound.state.orangepi800-next'
		;;

esac

if [[ $BOARD =~ orangepi4|orangepi4-lts|orangepi800 ]]; then

	BOOT_USE_BLOBS=yes
	DDR_BLOB='rk33/rk3399_ddr_933MHz_v1.24.bin'
	MINILOADER_BLOB='rk33/rk3399_miniloader_v1.19.bin'
	BL31_BLOB='rk33/rk3399_bl31_v1.30.elf'

else

	BOOT_USE_BLOBS=yes
	DDR_BLOB='rk33/rk3399_ddr_800MHz_v1.24.bin'
	MINILOADER_BLOB='rk33/rk3399_miniloader_v1.19.bin'
	BL31_BLOB='rk33/rk3399_bl31_v1.30.elf'

fi

family_tweaks_s()
{

	if [[ -f ${SDCARD}/etc/pulse/default.pa && ${BOARD} == orangepi800 ]]; then

		sed -i "s/auto-profiles = yes/auto-profiles = no/" ${SDCARD}/usr/share/pulseaudio/alsa-mixer/profile-sets/default.conf

		echo "load-module module-alsa-sink device=hw:0,0 sink_name=AudioCodec-Playback sink_properties=\"device.description='Headphone or Speaker'\"" >> ${SDCARD}/etc/pulse/default.pa
		echo "load-module module-alsa-sink device=hw:1,0 sink_name=HDMI-Playback sink_properties=\"device.description='HDMI Audio'\"" >> ${SDCARD}/etc/pulse/default.pa

	elif [[ -f ${SDCARD}/etc/pulse/default.pa && ${BOARD} =~ orangepi4|orangepi4-lts ]]; then

		sed -i "s/auto-profiles = yes/auto-profiles = no/" ${SDCARD}/usr/share/pulseaudio/alsa-mixer/profile-sets/default.conf

		echo "load-module module-alsa-sink device=hw:0,0 sink_name=AudioCodec-Playback sink_properties=\"device.description='Headphone'\"" >> ${SDCARD}/etc/pulse/default.pa
		echo "load-module module-alsa-sink device=hw:1,0 sink_name=HDMI-Playback sink_properties=\"device.description='HDMI Audio'\"" >> ${SDCARD}/etc/pulse/default.pa

	fi

	if [[ $BRANCH == next && $RELEASE == jammy ]]; then

	        ffmepg_kodi_install

	fi
}

prepare_boot_configuration

atf_custom_postprocess()
{
	:
}
